/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CertificateRegistry,
  CertificateRegistryInterface,
} from "../../contracts/CertificateRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsCID",
        type: "string",
      },
    ],
    name: "CertificateIssued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "certificateId",
        type: "uint256",
      },
    ],
    name: "CertificateRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "certificates",
    outputs: [
      {
        internalType: "string",
        name: "ipfsCID",
        type: "string",
      },
      {
        internalType: "enum CertificateRegistry.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_ipfsCID",
        type: "string",
      },
    ],
    name: "issue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_certificateId",
        type: "uint256",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "enum CertificateRegistry.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b6110bf806101c86000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100ff5780638753367f146101095780638da5cb5b1461013a578063f2fde38b146101585761007d565b806320c5429b146100825780633cad9b0d1461009e578063663b3e22146100ce575b600080fd5b61009c6004803603810190610097919061082d565b610174565b005b6100b860048036038101906100b391906109a0565b6102bb565b6040516100c591906109f8565b60405180910390f35b6100e860048036038101906100e3919061082d565b6103a9565b6040516100f6929190610b09565b60405180910390f35b610107610462565b005b610123600480360381019061011e919061082d565b610476565b604051610131929190610b09565b60405180910390f35b6101426105e1565b60405161014f9190610b7a565b60405180910390f35b610172600480360381019061016d9190610bc1565b61060a565b005b61017c610690565b600060026000838152602001908152602001600020905060008160000180546101a490610c1d565b9050116101e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dd90610cc0565b60405180910390fd5b6001808111156101f9576101f8610a92565b5b8160010160009054906101000a900460ff16600181111561021d5761021c610a92565b5b0361025d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025490610d52565b60405180910390fd5b60018160010160006101000a81548160ff0219169083600181111561028557610284610a92565b5b0217905550817fefa6c5f47ac2523bb4db18032377bf7fdce0fa9d86eddcae1ca9bba38be615d760405160405180910390a25050565b60006102c5610690565b600060015490506040518060400160405280848152602001600060018111156102f1576102f0610a92565b5b81525060026000838152602001908152602001600020600082015181600001908161031c9190610f1e565b5060208201518160010160006101000a81548160ff0219169083600181111561034857610347610a92565b5b0217905550905050600160008154809291906103639061101f565b9190505550807f82e047af96f6b7e5a52ea238aee0ca4188211301535ddf1fe126e140df6421b4846040516103989190611067565b60405180910390a280915050919050565b60026020528060005260406000206000915090508060000180546103cc90610c1d565b80601f01602080910402602001604051908101604052809291908181526020018280546103f890610c1d565b80156104455780601f1061041a57610100808354040283529160200191610445565b820191906000526020600020905b81548152906001019060200180831161042857829003601f168201915b5050505050908060010160009054906101000a900460ff16905082565b61046a610690565b6104746000610717565b565b606060008060026000858152602001908152602001600020600001805461049c90610c1d565b9050116104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d590610cc0565b60405180910390fd5b60006002600085815260200190815260200160002060405180604001604052908160008201805461050e90610c1d565b80601f016020809104026020016040519081016040528092919081815260200182805461053a90610c1d565b80156105875780601f1061055c57610100808354040283529160200191610587565b820191906000526020600020905b81548152906001019060200180831161056a57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660018111156105b5576105b4610a92565b5b60018111156105c7576105c6610a92565b5b815250509050806000015181602001519250925050915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610612610690565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161067b9190610b7a565b60405180910390fd5b61068d81610717565b50565b6106986107db565b73ffffffffffffffffffffffffffffffffffffffff166106b66105e1565b73ffffffffffffffffffffffffffffffffffffffff1614610715576106d96107db565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161070c9190610b7a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61080a816107f7565b811461081557600080fd5b50565b60008135905061082781610801565b92915050565b600060208284031215610843576108426107ed565b5b600061085184828501610818565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108ad82610864565b810181811067ffffffffffffffff821117156108cc576108cb610875565b5b80604052505050565b60006108df6107e3565b90506108eb82826108a4565b919050565b600067ffffffffffffffff82111561090b5761090a610875565b5b61091482610864565b9050602081019050919050565b82818337600083830152505050565b600061094361093e846108f0565b6108d5565b90508281526020810184848401111561095f5761095e61085f565b5b61096a848285610921565b509392505050565b600082601f8301126109875761098661085a565b5b8135610997848260208601610930565b91505092915050565b6000602082840312156109b6576109b56107ed565b5b600082013567ffffffffffffffff8111156109d4576109d36107f2565b5b6109e084828501610972565b91505092915050565b6109f2816107f7565b82525050565b6000602082019050610a0d60008301846109e9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a4d578082015181840152602081019050610a32565b60008484015250505050565b6000610a6482610a13565b610a6e8185610a1e565b9350610a7e818560208601610a2f565b610a8781610864565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610ad257610ad1610a92565b5b50565b6000819050610ae382610ac1565b919050565b6000610af382610ad5565b9050919050565b610b0381610ae8565b82525050565b60006040820190508181036000830152610b238185610a59565b9050610b326020830184610afa565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6482610b39565b9050919050565b610b7481610b59565b82525050565b6000602082019050610b8f6000830184610b6b565b92915050565b610b9e81610b59565b8114610ba957600080fd5b50565b600081359050610bbb81610b95565b92915050565b600060208284031215610bd757610bd66107ed565b5b6000610be584828501610bac565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c3557607f821691505b602082108103610c4857610c47610bee565b5b50919050565b7f436572746966696361746552656769737472793a20436572746966696361746560008201527f20646f6573206e6f742065786973740000000000000000000000000000000000602082015250565b6000610caa602f83610a1e565b9150610cb582610c4e565b604082019050919050565b60006020820190508181036000830152610cd981610c9d565b9050919050565b7f436572746966696361746552656769737472793a20436572746966696361746560008201527f20616c7265616479207265766f6b656400000000000000000000000000000000602082015250565b6000610d3c603083610a1e565b9150610d4782610ce0565b604082019050919050565b60006020820190508181036000830152610d6b81610d2f565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610dd47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d97565b610dde8683610d97565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610e1b610e16610e11846107f7565b610df6565b6107f7565b9050919050565b6000819050919050565b610e3583610e00565b610e49610e4182610e22565b848454610da4565b825550505050565b600090565b610e5e610e51565b610e69818484610e2c565b505050565b5b81811015610e8d57610e82600082610e56565b600181019050610e6f565b5050565b601f821115610ed257610ea381610d72565b610eac84610d87565b81016020851015610ebb578190505b610ecf610ec785610d87565b830182610e6e565b50505b505050565b600082821c905092915050565b6000610ef560001984600802610ed7565b1980831691505092915050565b6000610f0e8383610ee4565b9150826002028217905092915050565b610f2782610a13565b67ffffffffffffffff811115610f4057610f3f610875565b5b610f4a8254610c1d565b610f55828285610e91565b600060209050601f831160018114610f885760008415610f76578287015190505b610f808582610f02565b865550610fe8565b601f198416610f9686610d72565b60005b82811015610fbe57848901518255600182019150602085019450602081019050610f99565b86831015610fdb5784890151610fd7601f891682610ee4565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061102a826107f7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361105c5761105b610ff0565b5b600182019050919050565b600060208201905081810360008301526110818184610a59565b90509291505056fea264697066735822122013e55911bc528584094b7c1ea108502bb6837846f78ce127c2f81096591b769864736f6c634300081a0033";

type CertificateRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateRegistry__factory extends ContractFactory {
  constructor(...args: CertificateRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CertificateRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null,
  ): CertificateRegistry__factory {
    return super.connect(runner) as CertificateRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateRegistryInterface {
    return new Interface(_abi) as CertificateRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): CertificateRegistry {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as CertificateRegistry;
  }
}
